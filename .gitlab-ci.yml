stages:
  - Test 
  - Build


# Backend Jobs
Test API:
  stage: Test
  image: python:3.6
  services:
  - postgres:9.6-alpine
  variables:
    POSTGRES_DB: forum_db
    POSTGRES_USER: admin
    POSTGRES_PASSWORD: pass
  script:
    - export FLASK_ENV=test
    - export SPY_LOG_LOGGER="pretty-no-meta"
    - pip install -r Backend/requirements.txt
    - pip install -r Backend/requirements-test.txt
    - pip install -e Backend
    - ./Backend/run-tests.sh


# Frontend Jobs
Build App:
  stage: Test
  image: openjdk:8-jdk
  variables:
    ANDROID_COMPILE_SDK: "28"
    ANDROID_BUILD_TOOLS: "28.0.2"
    ANDROID_SDK_TOOLS:   "4333796"
  before_script:
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
    - cd Frontend/kite_master
  cache:
    paths:
      - .gradle/wrapper
      - .gradle/caches
  script:
    - ./gradlew test

Build APK:
  only:
    - dev
    - demo
  stage: Build
  image: openjdk:8-jdk
  variables:
    ANDROID_COMPILE_SDK: "28"
    ANDROID_BUILD_TOOLS: "28.0.2"
    ANDROID_SDK_TOOLS:   "4333796"
  before_script:
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail
    - cd Frontend/kite_master
  cache:
    paths:
      - .gradle/wrapper
      - .gradle/caches
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - Frontend/kite_master/app/build/outputs/
    expire_in: 1 week